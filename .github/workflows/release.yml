name: Release artifacts

on:
  push:
    branches:
      - main
      
jobs:
  build:
    runs-on: macos-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1.1.1
      with:
        versionSpec: '5.x'
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v1.1.1
      id: gitversion_step
      with:
        useConfigFile: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Update csproj version
      shell: pwsh
      working-directory: SnowflakePS
      env:
        gitVersion_assemblyVersion: ${{ steps.gitversion_step.outputs.AssemblySemVer }}
      run: ../Scripts/SetProjectVersion.ps1
    - name: Update pwsh module version
      shell: pwsh
      working-directory: SnowflakePS
      env:
        gitVersion_assemblyVersion: ${{ steps.gitversion_step.outputs.AssemblySemVer }}
      run: ../Scripts/SetModuleVersion.ps1
    - name: dotnet build
      run: dotnet build
    - name: Update runsettings
      shell: pwsh
      run: Scripts/UpdatePlaceholders.ps1
      env:
        Test_base_path: ${{ github.workspace }}/SnowflakePSTest
        Test_timeout: 1800000
        Runsettings_path: ${{ github.workspace }}/SnowflakePSTest/E2E/testSetup.runsettings
        PSScript_path: ${{ github.workspace }}/SnowflakePSTest/E2E/Utils/env_setup.ps1
        EXTENSION_PATH: ${{ github.workspace }}/SnowflakePS/bin/Debug/net6.0
        ACCOUNT_1: ${{ vars.ACCOUNT_1 }}
        ACCOUNT_2: ${{ vars.ACCOUNT_2 }}
        USER_1: ${{ vars.QA_USER_1 }}
        USER_2: ${{ vars.QA_USER_2 }}
        PASSWORD_1: ${{ secrets.QA_USER_1_PWD }}
        PASSWORD_2: ${{ secrets.QA_USER_2_PWD }}
    - name: Dotnet Publish All
      shell: pwsh
      working-directory: SnowflakePS
      run: ../Scripts/PublishAll.ps1

    - name: Zip All
      shell: pwsh
      working-directory: SnowflakePS
      run: ../Scripts/ZipReleases.ps1
    - name: Tag the commit
      run: |
        next_version=${{ steps.gitversion_step.outputs.AssemblySemVer }}
        git tag -a "$next_version" -m "Version $next_version"
        git push --follow-tags
    - name: Creates a release in GitHub and uploads attachments
      run: |
        gh release create ${{ steps.gitversion_step.outputs.AssemblySemVer }} SnowflakePS/Releases/*.zip
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
